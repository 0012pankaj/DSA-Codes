class pair{  //BFS
    int row;
    int col;
    public pair(int row,int col)
    {
        this.row=row;
        this.col=col;

    }
}

class Solution  //BFS same as rotten orange
{
    public int[][] floodFill(int[][] image, int sr, int sc, int color)
    {   int n=image.length;
        int m=image[0].length;

        Queue<pair> q=new LinkedList<>();
        q.add(new pair(sr,sc));
        int nreqcolor= image[sr][sc];
        boolean visited[][]=new boolean[n][m];

        
        //helper row  and col
     int rr[]={-1,0,1,0};
     int cc[]={0,1,0,-1};

     while(!q.isEmpty())
     {  int r=q.peek().row;
        int c=q.peek().col;
        q.remove();
        
        image[r][c]=color;
      

        for(int i=0;i<4;i++)
        {
            int xr=r+rr[i];
            int xc=c+cc[i];
            if(xr>=0 && xr<n && xc>=0 && xc <m &&  image[xr][xc]== nreqcolor && visited[xr][xc]==false)
            {
                visited[xr][xc]=true;
                 
                q.add(new pair(xr,xc));
            }
        }
     }


      return image;  
        
    }
}
