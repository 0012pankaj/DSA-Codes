Given below is a binary tree. The task is to print the top view of binary tree.
Top view of a binary tree is the set of nodes visible when the tree is viewed from the top.
For the given below tree

       1
    /     \
   2       3
  /  \    /   \
4    5  6   7

Top view will be: 4 2 1 3 7
________________________________________________________________________________________________________
** we made pair outside  solution class because our topview is static function
** use BFS Approch
**only small change between code of TOP VIEW and BOTTOM VIEW
**. we use concept of horizontal distance nad tree Map that sort map on bases of Keys
________________________________________________________________________________________________________-
class Pair{
         Node n;
         int hor_dis;
      
         public Pair(Node n,int hor_dis){
             this.n=n;
             this.hor_dis=hor_dis;
           }
    
      }
       
class Solution
{    
       //using Bfs
    static ArrayList<Integer> topView(Node root)
    {  
         ArrayList<Integer> TpView=new ArrayList<>();
         if(root == null) return TpView;
         
       Map<Integer,Integer> mp=new TreeMap<>();
       Queue<Pair> q=new LinkedList<Pair>();
       
       q.add(new Pair(root,0));
       
       while(!q.isEmpty()){
           Pair p=q.poll();
           Node nn=p.n;
           int hd=p.hor_dis;
           
           if(!mp.containsKey(hd)){  //<---------main condition
                mp.put(hd,nn.data);
           }
           
           if(nn.left!=null){
               q.add(new Pair(nn.left,hd-1));
           }
            if(nn.right!=null){
               q.add(new Pair(nn.right,hd+1));
           }
           
       }
       
       //output--->
      
       
       for(Map.Entry<Integer,Integer> m: mp.entrySet()){
           TpView.add(m.getValue());
       }
       
       return TpView;
        
    }
    
    
    
    
}
