

class Solution
{
    //Function to return the lowest common ancestor in a Binary Tree.
	Node lca(Node root, int p,int q)
	{
	    
	    if(root == null) return null;

        if(root.data == p || root.data == q) return root;

        Node lca_left= lca(root.left,p,q);
        Node lca_right= lca(root.right,p,q);

        if(lca_left != null && lca_right != null)
        return root;

        if(lca_left !=null  && lca_right == null)
         return lca_left;
        else if(lca_left ==null  && lca_right != null)
        return lca_right;
        else
         return null;
        
	}
	
}

/*Approch:-
we follow following steps:-
1.if current node is same as p and q than that is LCA.
2.if any one of its subtree contain the p and other contain q than curent is LCA
3.if any one of its subtree contain the p or q than curent is LCA
4.if none of its subtree contain any of p and q.*/

