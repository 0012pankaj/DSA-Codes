Given a Binary Search Tree and a target sum. Check whether there's a pair of Nodes in the BST with value summing up to the target sum. 
________________________________________________________________
class Solution
{
    // root : the root Node of the given BST
    // target : the target sum
   
    public void storeinset(Node root,ArrayList<Integer> l)
    { 
        if(root==null) return; //indorder[left root right]
        storeinset(root.left,l);
         l.add(root.data);
        storeinset(root.right,l);

    }
     public int isPairPresent(Node root, int k)
    {
        if(root==null) return 0;
        ArrayList<Integer> l=new ArrayList<Integer>();
        storeinset(root,l);

        //two pointer
        int s=l.size();
        int i=0;
        int j=s-1;
        while(i<j)
        {    int sum=l.get(i)+l.get(j);
            if(sum== k)
               return 1;
            else if(sum < k) 
               i++;
            else 
               j--;
        }

        return 0;
        
    }
}
