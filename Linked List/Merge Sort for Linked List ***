 //Function to sort the given linked list using Merge Sort. -->include all imp concepts of linked list
// approch:-
 //1.find mid head using two pointer
   //2.on the basis of mid find right and made left
      //3.short two parts using recursion call
       //4. merge two sorted array 
       
class Solution
{ 
   //............merging to sorted list................................... 
    public static Node merging(Node left,Node right)
  {  
      if(left==null){
          return right;
      }
       if(right==null){
          return left;
      }
      
      Node cur=new Node(0);
      Node temp=cur;
      
      while(left !=null && right !=null){
          if(left.data < right.data)
          {
              temp.next=left;
              temp=left;
              left=left.next;
          }else{
              
              temp.next=right;
              temp=right;
              right=right.next;
          }
        
      }
        while(left!=null){
              temp.next=left;
              temp=left;
              left=left.next;
          }
          
           while(right!=null){
              temp.next=right;
              temp=right;
              right=right.next;
          }
          
     return cur.next;
  }
  
  //.............finding mid value................................
   public static Node givmid(Node head)
   {    //1.divide it in two parts
        Node slow=head;
        Node fast=head;
        while(fast.next !=null && fast.next.next != null )
        {   slow=slow.next;
            fast=fast.next.next;
            
        }
              
       return slow;
   }
   
   //.....................start................................
    static Node mergeSort(Node head)
    {  
        if(head == null || head.next==null) return head;
        
        //1.find mid head using two pointer
        
        Node mid=givmid(head);
       //2.on the basis of mid find right and made left
       
        Node left=head;
        Node right=mid.next;
        mid.next=null;
       
       //3.short two parts using recursion call
       
       left=mergeSort(left);
       right=mergeSort(right);
        
       //4. merge two sorted array 
       
       Node newhead=merging(left,right);
       
       return newhead;       
    }
}


